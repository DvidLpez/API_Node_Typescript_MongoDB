{
  "swagger": "2.0",
  "info": {
    "description": "Api Rest creada con NodeTs y conexión a MongoDB",
    "version": "1.0.0",
    "title": "DLB - NodeTS & MongoDB"
  },
  "externalDocs": {
    "description": "Ir a la web del desarrollador",
    "url": "https://lopezblasco.com"
  },
  "schemes": [
    "http",
    "https"
  ],
  "host": "localhost:3000",
  "basePath": "/v1",
  "securityDefinitions": {
    "APIKeyHeader": {
      "type": "apiKey",
      "in": "header",
      "name": "x-token"
    }
  },
  "tags": [
    {
      "name": "Usuarios",
      "description": "Operaciones sobre usuarios en la app"
    }
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Creación de usuarios",
        "description": "Creamos nuevos usuarios para la aplicación",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Objeto con los campos del usuario",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post_User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuario creado correctamente",
            "schema": {
              "$ref": "#/definitions/CreationUserResponse"
            }
          },
          "400": {
            "description": "Error al crear el usuario",
            "schema": {
              "$ref": "#/definitions/CreationUserResponseError"
            }
          }
        }
      },
      "get": {
        "security": [{
          "APIKeyHeader": []
        }],
        "tags": [
          "Usuarios"
        ],
        "summary": "Información de usuario",
        "description": "Recogemos la información detallada del usuario autenticado",
        "operationId": "getUser",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Información de usuario cargada correctamente",
            "schema": {
              "$ref": "#/definitions/GetUserResponse"
            }
          },
          "401": {
            "description": "No se puede consultar el usuario",
            "schema": {
              "$ref": "#/definitions/GetUserResponseError"
            }
          }
        }
      },
      "put": {
        "security": [{
          "APIKeyHeader": []
        }],
        "tags": [
          "Usuarios"
        ],
        "summary": "Actualizar perfil de usuario",
        "description": "Recogemos la información detallada del usuario a modificar",
        "operationId": "updateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The user name for login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario actualizado correctamente",
            "schema": {
              "$ref": "#/definitions/UpdateUserResponse"
            }
          },
          "401": {
            "description": "No se puede actualizar el usuario",
            "schema": {
              "$ref": "#/definitions/GetUserResponseError"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Logear usuario",
        "description": "Acceso de un usuario a la aplicación",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Email del usuario",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Credenciales del usuario",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario logado correctamente",
            "schema": {
              "$ref": "#/definitions/UpdateUserResponse"
            }
          },
          "400": {
            "description": "Error de credenciales",
            "schema": {
              "$ref": "#/definitions/GetUserResponseError"
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/createWithArray": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "description": "",
        "operationId": "createUsersWithArrayInput",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/createWithList": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "description": "",
        "operationId": "createUsersWithListInput",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Post_User": {
      "type": "object",
      "properties": {
        "nombre": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        }
      }
    },
    "CreationUserResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "default": true
        },
        "mensaje": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "CreationUserResponseError": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "default": false
        },
        "err": {
          "type": "object",
          "properties": {
            "errMsg": {
              "type": "string"
            },
            "...": {
              "type": "string"
            }
          }
        }
      }
    },
    "GetUserResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "default": true
        },
        "usuario": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "nombre": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "avatar": {
              "type": "string"
            }
          }
        }
      }
    },
    "GetUserResponseError": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "default": false
        },
        "mensaje": {
          "type": "string"
        }
      }
    },
    "Update_User": {
      "type": "object",
      "properties": {
        "nombre": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        }
      }
    },
    "UpdateUserResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "mensaje": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}